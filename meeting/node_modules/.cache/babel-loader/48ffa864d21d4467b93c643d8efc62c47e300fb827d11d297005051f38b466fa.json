{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashc\\\\OneDrive\\\\Desktop\\\\MMS\\\\meeting\\\\src\\\\pages\\\\deleteKeyword.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AdminAction from '../components/AdminAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteKeyword() {\n  _s();\n  const {\n    currentUser\n  } = useSelector(state => state.user);\n  const [loading, setLoading] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(false);\n  const [roleData, setRoleData] = useState([]);\n  const [keywordData, setKeywordData] = useState([]);\n  const [msg, setmsg] = useState('');\n  // State to store the selected option\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedKeyword, setSelectedKeyword] = useState('');\n  useEffect(() => {\n    fetchRoleData();\n  }, []);\n  const fetchRoleData = async () => {\n    const url = `http://localhost:8000/getroles`;\n    const response = await fetch(url);\n    const data = await response.json();\n    setRoleData(data.roles);\n  };\n  useEffect(() => {\n    fetchKeywordData();\n  }, []);\n  const fetchKeywordData = async () => {\n    const url = `http://localhost:8000/getAssignedKeywords`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roleID: 1\n      })\n    });\n    const data = await response.json();\n    setKeywordData(data.roles);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log(formData);\n      setLoading(true);\n      setError(false);\n      const url = `http://localhost:8000/assignKeyword`;\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...formData\n        })\n      });\n      const data = await res.json();\n      setLoading(false);\n      if (data.success === false) {\n        setError(data.message);\n      }\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  //console.log(formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminAction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container col-lg-6 col-sm-8 card text-center mt-3 p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-semibold text-center\",\n          children: \"Delete Keyword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body \",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"dropdown\",\n              onChange: e => setSelectedRole(e.target.value),\n              value: selectedRole,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), roleData.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.role_name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"dropdown\",\n              onChange: e => setSelectedKeyword(e.target.value),\n              value: selectedKeyword,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Keyword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), keywordData.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.role_name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedRole\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-dan    ger input-group-btn\",\n              children: loading ? 'Deleting...' : 'Delete Keyword'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(DeleteKeyword, \"zvl3L7mAVBG7O08ABQbjbTgj/JU=\", false, function () {\n  return [useSelector];\n});\n_c = DeleteKeyword;\nvar _c;\n$RefreshReg$(_c, \"DeleteKeyword\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useDispatch","useSelector","AdminAction","jsxDEV","_jsxDEV","DeleteKeyword","_s","currentUser","state","user","loading","setLoading","uploading","setUploading","error","setError","roleData","setRoleData","keywordData","setKeywordData","msg","setmsg","selectedRole","setSelectedRole","selectedKeyword","setSelectedKeyword","fetchRoleData","url","response","fetch","data","json","roles","fetchKeywordData","method","headers","body","JSON","stringify","roleID","handleSubmit","e","preventDefault","console","log","formData","res","success","message","children","fileName","_jsxFileName","lineNumber","columnNumber","class","className","onSubmit","id","onChange","target","value","required","map","item","role_name","type","_c","$RefreshReg$"],"sources":["C:/Users/yashc/OneDrive/Desktop/MMS/meeting/src/pages/deleteKeyword.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AdminAction from '../components/AdminAction';\r\n\r\nexport default function DeleteKeyword() {\r\n    const { currentUser } = useSelector((state) => state.user);\r\n    const [loading, setLoading] = useState(false);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [roleData, setRoleData] = useState([]);\r\n    const [keywordData, setKeywordData] = useState([]);\r\n    const [msg, setmsg] = useState('');\r\n    // State to store the selected option\r\n    const [selectedRole, setSelectedRole] = useState('');\r\n    const [selectedKeyword, setSelectedKeyword] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchRoleData();\r\n    }, []);\r\n    const fetchRoleData = async () => {\r\n        const url = `http://localhost:8000/getroles`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setRoleData(data.roles);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        fetchKeywordData();\r\n    }, []);\r\n    const fetchKeywordData = async () => {\r\n        const url = `http://localhost:8000/getAssignedKeywords`;\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                roleID:1\r\n            }),\r\n        });\r\n        const data = await response.json();\r\n        setKeywordData(data.roles);\r\n    };\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            console.log(formData);\r\n            setLoading(true);\r\n            setError(false);\r\n            const url = `http://localhost:8000/assignKeyword`;\r\n            const res = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    ...formData,\r\n                }),\r\n            });\r\n            const data = await res.json();\r\n            setLoading(false);\r\n            if (data.success === false) {\r\n                setError(data.message);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n            setLoading(false);\r\n        }\r\n    };\r\n    //console.log(formData);\r\n    return (\r\n        <div>\r\n            <AdminAction />\r\n            <div class=\"container col-lg-6 col-sm-8 card text-center mt-3 p-5\">\r\n                <div class=\"card-header\">\r\n                    <h1 className=\"text-3xl font-semibold text-center\">Delete Keyword</h1>\r\n                </div>\r\n                <div class=\"card-body \">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div class=\"input-group\">\r\n                            <select id=\"dropdown\" onChange={(e) => setSelectedRole(e.target.value)} value={selectedRole} required>\r\n                                <option value=\"\">Select Role</option>\r\n                                {roleData.map((item) => (\r\n                                    <option key={item.id} value={item.id}>{item.role_name}</option>\r\n                                ))}\r\n                            </select>\r\n                            <select id=\"dropdown\" onChange={(e) => setSelectedKeyword(e.target.value)} value={selectedKeyword} required>\r\n                                <option value=\"\">Select Keyword</option>\r\n                                {keywordData.map((item) => (\r\n                                    <option key={item.id} value={item.id}>{item.role_name}</option>\r\n                                ))}\r\n                            </select>\r\n                            {<p>{selectedRole}</p>}\r\n                            <button type=\"submit\" class=\"btn btn-dan    ger input-group-btn\">\r\n                                {loading ? 'Deleting...' : 'Delete Keyword'}\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            {error && <p className=\"text-danger\">{error}</p>}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}